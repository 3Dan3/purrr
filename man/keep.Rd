% Generated by roxygen2 (4.0.2.9000): do not edit by hand
\name{keep}
\alias{compact}
\alias{discard}
\alias{keep}
\title{Keep or discard elements using a predicate function.}
\usage{
keep(.x, .f, ...)

discard(.x, .f, ...)

compact(.x, .f = identity)
}
\arguments{
\item{.x}{A list or vector.}

\item{.f}{A function, formula or string.

  If a function, it is used as is.

  If a formula, e.g. \code{~ x + 2}, it is converted to a function with
  a single argument, \code{x}, e.g. \code{function(x) x + 2}. This is less
  typing for very simple anonymous functions.

  If a string, e.g. \code{"y"}, it is converted to an extractor function,
  \code{function(x) x[["y"]]}.}

\item{...}{Additional arguments passed on to \code{.f}.}
}
\description{
\code{keep} and \code{discard} are opposites. \code{compact} is a handy
wrapper that removes all elements that are \code{NULL}.
}
\details{
These are usually called \code{select} or \code{filter} and \code{reject} or
\code{drop}, but those names are already taken. \code{keep} is similar to
\code{\link{Filter}} but the argument order is more convenient, and the
evaluation of \code{.f} is stricter.
}
\examples{
rep(10, 10) \%>\%
  map(sample, 5) \%>\%
  keep(function(x) mean(x) > 6)

# Or use a formula
rep(10, 10) \%>\%
  map(sample, 5) \%>\%
  keep(~ mean(x) > 6)
}

