% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/cross.R
\name{cross}
\alias{cross}
\title{Produce all combinations of list elements}
\usage{
cross(.x, .wide = TRUE)
}
\arguments{
\item{.x}{A list.}

\item{.wide}{If \code{TRUE}, returns a list of unique combinations.
If \code{FALSE}, returns a list of the same size as \code{.x}
(this format is equivalent to \code{as.list(expand.grid(.x))}).}
}
\description{
\code{cross} returns the product set of the elements of
\code{.x}. It is similar to \code{expand.grid} but it takes and
returns a list and the output is more amenable to mapping
operations.
}
\examples{
# We build all combinations of names, greetings and separators from our
# list of data and pass each one to paste()
data <- list(
  id = c("John", "Jane"),
  greeting = c("Hello.", "Bonjour."),
  sep = c("! ", "... ")
)

cross(data) \%>\%
  map(splat(paste))

# For this purpose, the long format is less pratical and requires a loop
args <- cross(data, .wide = FALSE)

out <- vector("list", length(args[[1]]))
for (i in seq_along(out))
  out[[i]] <- map(args, i) \%>\% splat(paste)()
out
}
\seealso{
expand.grid
}

