% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_function.R
\name{as_function}
\alias{as_function}
\alias{as_function.function}
\alias{as_function.formula}
\alias{get_attr}
\alias{as_function.attr}
\alias{as_function.character}
\alias{as_function.numeric}
\alias{as_function.list}
\title{Convert an object into a function}
\usage{
as_function(.f, ...)

\method{as_function}{function}(.f, ...)

\method{as_function}{formula}(.f, ...)

get_attr(x)

\method{as_function}{attr}(.f, ..., .null = NULL)

\method{as_function}{character}(.f, ..., .null = NULL)

\method{as_function}{numeric}(.f, ..., .null = NULL)

\method{as_function}{list}(.f, ..., .null = NULL)
}
\arguments{
\item{.f}{A function, formula, or atomic vector.

If a \strong{function}, it is used as is.

If a \strong{formula}, e.g. \code{~ .x + 2}, it is converted to a function. There
are three ways to refer to the arguments:
\itemize{
\item For a single argument function, use \code{.}
\item For a two argument function, use \code{.x} and \code{.y}
\item For more arguments, use \code{..1}, \code{..2}, \code{..3} etc
}

This syntax allows you to create very compact anonymous functions.

If \strong{character vector}, \strong{numeric vector}, or \strong{list}, it
is converted to an extractor function. Character vectors index by name
and numeric vectors index by position; use a list to index by position
and name at different levels. Within a list, wrap strings in \code{get_attr()}
to extract named attributes. If a component is not present, the value of
\code{.null} will be returned.}

\item{...}{Additional arguments passed on to methods.}

\item{x}{A string}

\item{.null}{Optional additional argument for extractor functions
(i.e. when \code{.f} is character, integer, or list). Returned when
value does not exist or is \code{NULL}.}
}
\description{
\code{as_function} is the powerhouse behind the varied function
specifications that most purrr functions allow. It is an S3 generic.
}
\examples{
as_function(~ . + 1)
as_function(1)

as_function(c("a", "b", "c"))
# Equivalent to function(x) x[["a"]][["b"]][["c"]]

as_function(list(1, "a", 2))
# Equivalent to function(x) x[[1]][["a"]][[2]]

as_function(list(1, get_attr("a")))
# Equivalent to function(x) attr(x[[1]], "a")

as_function(c("a", "b", "c"), .null = NA)
}
