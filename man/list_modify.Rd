% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list-modify.R
\name{list_modify}
\alias{list_modify}
\alias{list_update}
\alias{update_list}
\title{Modify a list}
\usage{
list_modify(x, y)

list_update(`_x`, ...)
}
\arguments{
\item{y}{Replacement list}

\item{_x, x}{List to modify}

\item{...}{New values of a list. Use \code{NULL} to remove values.
Use a formula to evaluate in the context of the list values.}
}
\description{
\code{list_modify()} recursively modifies a list, matching elements either by
name or position. \code{list_update()} is a helper optimised for interactively
modifying an existing list: you can use a formula (a quosure) to replace
using existing values.
}
\examples{
x <- list(x = 1:10, y = 4, z = list(a = 1, b = 2))
str(x)

# Update values
str(list_modify(x, list(a = 1)))
# Replace values
str(list_modify(x, list(z = 5)))
str(list_modify(x, list(z = list(a = 1:5))))
# Remove values
str(list_modify(x, list(z = NULL)))

# list_update is useful for interactive tweaking, because it
# uses ... instead of a separate list
str(list_update(x, a = 1))
str(list_update(x, z = 5))
str(list_update(x, z = list(a = 1:5)))
str(list_update(x, z = NULL))

# In list_update() you can also use formulas to compute new values
list_update(x, z1 = ~ z[1])
list_update(x, z = ~ x + y)
}
